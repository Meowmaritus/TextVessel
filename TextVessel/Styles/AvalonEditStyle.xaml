<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TextVessel"
                    xmlns:AvalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                    >

    <FontFamily x:Key="Soul_Font">pack://application:,,,/Fonts/#Soul_Font</FontFamily>

    <Style TargetType="{x:Type local:CodeEditor}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource BackgroundNormal}" />
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <!-- AvalonEdit does not support RTL, so ensure we use LTR by default -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CodeEditor}">
                    <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
                        >

                        <Frame 
                            Foreground="{StaticResource Foreground}"
                            VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Left"
                            HorizontalAlignment="Stretch"
                            Padding="4"
                            Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextArea}" 
                            />

                        <!--<ScrollViewer
							Focusable="False"
							Name="PART_ScrollViewer"
							CanContentScroll="False"
							VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
							HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
							Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextArea}"
							VerticalContentAlignment="Top"
							HorizontalContentAlignment="Left"
							Padding="{TemplateBinding Padding}"
						/>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type AvalonEdit:TextArea}" x:Shared="False">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="FontSize" Value="24 px"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SelectionBrush">
            <Setter.Value>
                <SolidColorBrush
					Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}"
					Opacity="0.7"/>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectionBorder">
            <Setter.Value>
                <Pen Brush="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
				     Thickness="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectionForeground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type AvalonEdit:TextArea}">
                    <DockPanel Focusable="False">
                        <ItemsControl DockPanel.Dock="Left"
						              Focusable="False"
						              ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LeftMargins}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        <ContentPresenter
							Panel.ZIndex="-1"
							Focusable="False"
							Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextView}"/>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>